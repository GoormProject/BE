name: CD with Docker Deploy

on:
  push:
    branches: [ "develop" ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Make application-prod.properties
        run: |
          cd ./src/main/resources
          touch ./application-prod.properties
          echo "${{ secrets.PROPERTIES_PROD }}" > ./application-prod.properties
        shell: bash

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle Wrapper
        run: ./gradlew build -x test

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_ID}}/jelly:latest .
          
      - name: Login DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_ID }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Push a Docker Image to DockerHub
        run: |
          docker push ${{ secrets.DOCKER_ID }}/jelly:latest

      - name: Docker deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          prot: ${{ secrets.PORT }}
          envs: GITHUB_SHA
          script: |
            sudo docker-compose -f /root/compose/docker-compose.yml down --rmi all
            sudo docker pull ${{ secrets.DOCKER_ID }}/jelly:latest
            sudo docker-compose -f /root/compose/docker-compose.yml up -d
            sudo docker image prune -f
            
